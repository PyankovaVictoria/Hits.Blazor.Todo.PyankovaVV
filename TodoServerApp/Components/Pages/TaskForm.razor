@page "/task/add"
@page "/tasks/{Id:int}"

@inject IDataService data
@inject NavigationManager navigate


@if (TaskItem !=null)
    
    <EditForm Model="TaskItem" FormName="TaskForm" OnValidSubmit="ValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <h2>Новая задача</h2>
        <InputNumber @bind-Value="TaskItem.Id" hidden />
         <div class="form-group d-flex justify-content-between m-2">
             <laber class="col-form-label col-3">Заголовок</laber>
             <InputText @bind-Value="TaskItem.Title" Class="form-contrl" />
             <ValidationMessage For="() => TaskItem.Title" />
         </div>
         <div class="form-group d-flex justify-content-between m-2">
             <laber class="col-form-label col-3">Описание</laber>
             <InputTextArea @bind-Value="TaskItem.Description" Class="form-contrl" />
             <ValidationMessage For="() => TaskItem.Description" />
         </div>
         <div class="form-group d-flex justify-content-between m-2">
             <laber class="col-form-label col-3">Дата окончания</laber>
             <InputDate @bind-Value="TaskItem.FinishDate" Class="form-contrl" />
             <ValidationMessage For="() => TaskItem.FinishDate" />
         </div>
         <div class="btn-group">
             <button class="btn btn-primary m-2" tape="submit">Сохранить</button>
             <a class=" btn btn-primary m-2" href=" /">Отмена</a>
          </div>
    </EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    TaskItem TaskItem { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (Id != 0)
        {
            var src = await data.GetTaskAsync(Id);
            TaskItem.Id = src.Id;
            TaskItem.Title = src.Title;
            TaskItem.Description = src.Description;
            TaskItem.FinishTDate = src.FinishTDate;    
        }
    }

    async Task ValidSubmit()
    {
        await data.SaveAsync(TaskItem!);
        navigate.NavigateTo("/");
    }

}